-- SQLines SQL Converter options (contact us at support@sqlines.com to request a new option)

-- Please note that all configuration options can be specified in the command line as well.

-- DDL Options 
--------------

-- Add the specified schema name for all object names that do not have the schema qualifier
-set_explicit_schema=

-- Set upper to convert object names (tables i.e.) to upper case in DDL scripts. Set lower to convert to lower case.
-object_name_case=

-- Set upper to convert column names to upper case in DDL scripts. Set lower to convert to lower case.
-column_name_case=

-- Set characters to quote column identifiers. 
-- For example, specify "" for double quotes (or \"\" if you use the option in command line)
-column_name_quotes=

-- Set characters to quote object identifiers (schemas, table, views, aliases etc). 
-- For example, specify "" for double quotes (or \"\" if you use the option in command line)
-object_name_quotes=

-- MariaDB Options
------------------

-- The size of VARCHAR columns when they are mapped to TEXT instead of VARCHAR(size). Default is 2000. 
-- This helps prevent errors:
-- "Row size too large. The maximum row size for the used table type, not counting BLOBs, is 65535. 
--  This includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs"
-mariadb_varchar_to_text_size=

-- Oracle Options 
-----------------

-- Mapping of Oracle NUMBER data type without the precision and scale (i.e. floating point number) for table columns and PL/SQL variables 
-ora_number=

-- Mapping of Oracle NUMBER data type without the precision and scale (i.e. floating point number) for table columns that 
-- are part of primary keys or unique constraints. By default, it is converted to BIGINT.
-ora_number_int=

-- Mapping of Oracle NUMBER data type without the precision and scale for parameters in PL/SQL stored procedures and functions
-ora_number_plsql_params=

-- SQL Server Options 
----------------------

-- Prefix when converting @ symbol in SQL Server/Sybase parameters to other databases, default is p_
-- Specify "" or '' to use empty prefix
-tsql_parameters_prefix=

-- PostgreSQL Options 
---------------------

-- Convert CREATE PROCEDURE statements to CREATE FUNCTION in PostgreSQL, default is No
-- CREATE PROCEDURE is available since PostgreSQL 11 only
-pg_use_create_function=

-- If Yes is specified and a source procedure returns a single result set, convert it to a function with RETURNS TABLE and RETURN QUERY in PostgreSQL,
-- otherwise use procedure and REFCURSORs. Default is No (i.e. to use procedure and REFCURSORs)
-pg_use_function_single_result_set=

-- If Yes is set then use = as the assignment operator in PL/pgSQL, default is No and := is used as the assignment operator
-pg_equal_assignment_operator=

-- UDF Options 
--------------

-- If No is specified Oracle MONTHS_BETWEEN is converted to DATEDIFF(MONTH, ...) function in SQL Server, otherwise UDF is used
-- that produces the same result in SQL Server as the Oracle function. Default is Yes i.e. UDF is used
-- For more details, see https://sqlines.com/oracle-to-sql-server/months_between
-udf_months_between=

-- Tool Options 
---------------

-- Input files encoding (i.e. Shift-JIS for Japanese)
-encoding=

-- Create assessment report
-a=yes
